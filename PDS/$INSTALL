Introdction:
-----------
   This TSO command/program consists of the following members:
     SPACE     - Assembler source
     SSCSPC**  - ISPF panels

   In a nutshell, installation consists of assembling the source into
a load library. If you wish to make customized ISPF invocation and
display panels available, panels SSCSPC** should also be copied to a
library in the ISPPLIB concatenation (or that is LIBDEFed to ISPPLIB).
   Further steps are required if you do *not* have the PTFs associated
with IBM APAR OW48527 installed on all systems where this program may
execute. Specifically, they are:
- the load module *must* be link-edited with AC(1), into an APF auth
  library,
- Further, if this program is to be made available as a TSO command
  and should be able to use ISPF Dialog Manager services, the command
  must:
  - be located in a LNKLSTed or TSO STEPLIBed library,
  - be named in the AUTHTSF section of SYS1.PARMLIB(IKJTSOxx)

   There are a number of Assembly variables that should be reviewed
before assembling the program.

Assembly Variables:
------------------
   Several assembly variables can be changed to customize this program
for your installation. These variables are all defined and initialized
at the beginning of the source code. The variables are:

- &PGMNAME
  This variable defines the name of the program. It is used:
  - to name the CSECT of the program,
  - as the prefix of the various messages issued by the program
  - as the command name when preparing to invoke IKJSCAN in batch
  - in the statistics line to identify the program
  - in the 'dataset name' in EDIF and BRIF displays
  This variable defaults to 'SPACE', but can be changed to any valid
  program name.
  If this variable is changed, it is probably reasonable, but not
  required, that the name of the load module in JCL1 or JCL2 also
  be changed.

- &VERSION
  This variable defines the current version of the program. It is used:
  - in the statistics line to identify the program
  The version number specified by this variable is used as part of
  the change documentation(?) maintained in the source of the program,
  and so should probably not be changed.

- &PNLNAME
  This variable defines the name of the ISPF panel that will be used to
  display the output of the command when using the customized display.
  It is used:
  - in the invocation of the ISPF Service DISPLAY
  If the value of this variable is changed, the name of the member
  containing a copy of panel SSCSPC02 in the ISPPLIB concatenation
  must also be changed.

- &SORT_Prompt_Popup_Panel
  This variable defines the name of the ISPF panel used to prompt the
  user when a SORT command is entered with no or invalid operands when
  the results are displayed via ISPF(B) or ISPF(S).
  If the value of this variable is changed, the name of the member
  containing a copy of panel SSCSPC03 in the ISPPLIB concatenation
  must also be changed.

- &ISPF_by_Default
  This variable indicates that ISPF Dialog Manager services, if
  available, should be used to display the results of this program.
  If this variable is set to 0, or ISPF DM services are not available,
  the results of this command will be displayed in TSO line-by-line
  mode (using PUTLINE). The effect of this variable can be over-
  ridden during execution using the ISPF keyword.
  If the value of this variable is changed, you may want to update the
  TSO HELP data, specified as comments within the source of the program,
  and the batch help messages starting at label C_ErrMsgs

- &ISPF_Default_Type
  This variable defines the type of ISPF display to be presented,
  if appropriate (that is, if the variable &ISPF_by_Default is set to
  1 and the ISPF keyword was not specified on invocation, or if the
  ISPF keyword was specified without any operand). The valid types:
  - SPACE   : a customized panel, named by &PNLNAME
  - EDIF    : ISPF Edit services
  - BRIF    : ISPF Browse services
  - NONE    : No ISPF services, TSO line-by-line
  If the value of this variable is changed, you may want to update the
  TSO HELP data, specified as comments within the source of the program,
  and the batch help messages starting at label C_ErrMsgs
  If the value is changed to something other than the 4 values above,
  TSO line-by-line output will be used.

- &Fore_LSPACE_Wait
  This variable defines the default number of seconds in which LSPACE
  must complete when running in the foreground (TSO). If LSPACE
  has not completed within this time, the LSPACE request is terminated,
  and no usage information is returned.
  A value of 0 indicates no limit, and LSPACE will use the least of:
    - the MIH time for the device, and
    - the LSPACE internal default of 240 seconds.
  This default can be overridden by the MAXLWAIT keyword.

- &Back_LSPACE_Wait
  This variable defines the default number of seconds in which LSPACE
  must complete when running in the background (Batch or STC).
  If LSPACE has not completed within this time, the LSPACE request is
  terminated, and no usage information is returned.
  A value of 0 indicates no limit, and LSPACE will use the least of:
    - the MIH time for the device, and
    - the LSPACE internal default of 240 seconds.
  This default can be overridden by the MAXLWAIT keyword.

- &Default_SubTask_Count
  This variable defines the default number of subtasks to be created
  to retrieve the DASD usage data (via LSPACE). If this value is 0,
  the number of subtasks created will be the least of:
  - the number of volumes against which LSPACE is to be issued, or
  - double the number of (non-ZIIP/ZAAP) engines assigned to the
    executing system, plus 1
  This default can be overridden by the MAXTASKS keyword.

- &Max_SubTask_Count
  This variable defines the maximum number of subtasks to be created
  to retrieve the DASD usage data (via LSPACE).
  This variable is used to limit the value of the MAXTASKS keyword.

Installation:
-----------
There are 2 JCL members supplied:
 - JCL1 - Assemble and link non-APFed, for those installations with
          APAR OW48527 installed
 - JCL2 - Assemble and link APFed, for those installations without
          APAR OW48527 installed

   Select the appropriate JCL member, and edit it to provide a valid
JOB card, and to change the SYSLMOD library as appropriate. Note that
if you are using JCL2, the SYSLMOD library must be in the LNKLST, or in
the TSO STEPLIB concatenation; this is a requirement of IKJEFTSR.
The SYSLMOD library must also be APF-Authorized.

Whichever JCL member you use, remember to change the member name
on the SYSLMOD statement if you changed the name of the program, above.

   If you use JCL2 (the APFed version), you must update member IKJTSOxx
in SYS1.PARMLIB if you wish to make ISPF displays available. The member
name used in the Link-edit SYSLMOD statement must be present in the
AUTHTSF section, and must not be present in the AUTHCMD section. The
TSO command 'PARMLIB UPDATE(xx)' can be used to bring the update into
effect.

   If you wish to make the panels available, copy members SSCSPC**
to a library available to ISPF (in the ISPPLIB concatenation).
Again, if you updated the Assembly variable &PNLNAME, above,
rename the panel(s). SSCSPC02 is used to display the results of the
command, while SSCSPC01 generates the command to invoke SPACE. You may
wish to make an entry from a generally available panel to SSCSPC01 -
there is an example in member SPF@PRIM. SSCSPC03 is the SORT pop-up
panel, and all the other SSCSPC** panels are help panels.

   If you want to make HELP information available, there is an exam-
ple of a TSO HELP member included as comments in member SPACE. Extract
this from member SPACE, and remove leading and trailing '*'. If you
changed the name of the program (Assembly variable &PGMNAME, above),
you may want to update the message portion of the TSO HELP, since the
messages are generated with the prefix &PGMNAME. Once you are happy with
the HELP member, save it in a library in the SYSHELP concatenation, with
a member name the same as the SYSLMOD member name from the Link-edit.


Troubleshooting.
---------------

 If you get Assembly errors in the IOSDPATH macro, you may want to
to take a look at IBM APAR OW46838, which talks about errors in the
macro, and a Local Fix to repair them.

SPACE02I Insufficient APF authorization
         The SPACE command requires APF authorization, but is cur-
         rently not authorized even when invoked via IKJEFTSR.
         Possible reasons:
         - SPACE not present in the AUTHTSF section of
           SYS1.PARMLIB(IKJTSOxx)
         - SPACE not Linked with AC(1)
         - SPACE not Linked into an APFed library
         - IKJEFTSR failed with RC=14, Reason=18 or 34

SPACE03I ISPF DM Services unavailable xx-yy
         This message is issued when the SPACE command could not
         use ISPF Dialog Management Services to display the
         results of the command in ISPF format. Either the required
         ISPF modules were unavailable, or the environment is such
         that ISPF Dialog Management Services are not functional.
         In the message, xx indicates which ISPF service is
         unavailable, and yy is the return code from that service.
         The codes are generated and documented(?) in block G0010
         in the assembler source.
         Possible Causes:
         - SPACE present in the AUTHCMD section of
           SYS1.PARMLIB(IKJTSOxx)

SPACE06I Program not found in STEPLIB/LNKLST
         This command requires that the processing program reside
         in the current STEPLIB or system LNKLST concatenation,
         but the program cannot be located. This is a requirement
         of the TSO Service Routine IKJEFTSR.
         This corresponds to IKJEFTSR failure RC=14, Reason=28

SPACE07I IKJEFTSR error xx-yy
         The TSO/E Service Routine IKJEFTSR could not complete
         successfully. xx is the Return Code, and yy the Reason
         Code.

SPACE09I Incompatible versions of SPACE found
         The TSO/E Service Routine IKJEFTSR invoked a different
         version of SPACE (from LNKLST/STEPLIB) than was
         originally invoked (from ISPLLIB?).
         Various other ABENDs may be caused by this situation as well.

  If the device types for DASD volumes show up as blanks, you might
check that CSECT IECDDEVT in SYS1.NUCLEUS(IECDINIT) exists, and that
it is still in the format expected (see comments after label D0260 in
the source). We use NUCLKUP to get the address of this CSECT. Note that
CSECT IECDDEVT is undocumented by IBM.

  If you have set ISPF_by_Default to 1, ISPF_Default_Type to something
other than NONE, and do not enter the ISPF keyword on the command
invocation, no error messages are produced if ISPF DM services are not
available. To cause error messages to be produced, specify the ISPF
keyword at command invocation - if ISPF DM services are unavailable,
you should get msg SPACE03I, indicating the cause of the error.

